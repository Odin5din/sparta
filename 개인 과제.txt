클래스간 결합도

추상 클래스를 만들고 기존의 메소드들을 클래스로 만들었습니다.

그리고 오버라이드를 통해 추상 클래스의 메소드를 재정의 하였습니다.



의존성의 변화

클래스 하나에서 비슷한 추상클래스에서 클래스를 별도로 만든 것

Lv3.에서는 수정 한다면 전체가 영향을 받지만, 추상클래스에서는 의존도가 많아져 개별적이게 되었고,

수정을 한다고 해도 개별적인 개체 하나만 영향을 받습니다.

Lv3.에 비해서 SOLID가 잘 반영된 것 같고 더 객체지향의 설계가 된 것 같습니다.



어떤점이 개선 되었는지

Lv3.에서 SOLID의 원칙을 지켜 만든 것이 Lv4. 같습니다.

수정을 한다고 해도 기능 하나만 영향을 받기 때문에 수정이 용이해졌습니다. 



단일 책임 원칙이 적용 되었는가?

적용된 것 같습니다.
